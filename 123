#!/bin/bash

set -euo pipefail

log() {
    echo -e "\e[94m[+] $1\e[0m"
}

error() {
    echo -e "\e[91m[!] $1\e[0m"
}

trap 'error "Script failed at line $LINENO. Exiting."' ERR

# === Clean previous installs ===
log "Cleaning previous installs..."
sudo rm -rf ~/Mythic ~/mythic-cli ~/.mythic ~/offensive-tools
sudo docker system prune -af || true
sudo apt-get remove -y docker docker.io containerd runc || true
sudo apt-get autoremove -y || true

# === Update system ===
log "Updating system..."
sudo apt-get update -y && sudo apt-get upgrade -y

# === Install dependencies ===
log "Installing dependencies..."
sudo apt-get install -y \
    curl wget git unzip build-essential \
    apt-transport-https ca-certificates gnupg lsb-release \
    python3 python3-pip software-properties-common lynx

# === Install Docker ===
log "Installing Docker and Docker Compose..."
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt-get update -y
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo usermod -aG docker $USER
sudo systemctl enable docker
sudo systemctl start docker

# === Install Mythic ===
log "Installing Mythic..."
git clone https://github.com/its-a-feature/Mythic ~/Mythic
cd ~/Mythic
./install_docker_ubuntu.sh

# === Install mythic-cli ===
cd ~
log "Installing mythic-cli..."
git clone --depth=1 https://github.com/its-a-feature/mythic-cli.git ~/mythic-cli
cd ~/mythic-cli
pip3 install -r requirements.txt
echo 'export PATH=$PATH:~/mythic-cli' >> ~/.bashrc
source ~/.bashrc

# === Install Agents ===
log "Installing Mythic agents..."
AGENTS=(
  "https://github.com/MythicAgents/poseidon"
  "https://github.com/MythicAgents/apollo"
  "https://github.com/MythicAgents/athena"
  "https://github.com/MythicAgents/xenon"
  "https://github.com/MythicAgents/medusa"
  "https://github.com/MythicAgents/thanatos"
  "https://github.com/MythicAgents/hannibal"
  "https://github.com/MythicAgents/venus"
  "https://github.com/MythicAgents/ghostwriter"
  "https://github.com/MythicAgents/nemesis"
  "https://github.com/MythicAgents/bloodhound"
  "https://github.com/MythicAgents/sliver"
)

for AGENT in "${AGENTS[@]}"; do
    mythic-cli install github "$AGENT" || error "Failed to install $AGENT"
done

# === Install C2 Profiles ===
log "Installing C2 profiles..."
C2_PROFILES=(
  "http"
  "httpx"
  "websocket"
  "dns"
  "dynamichttp"
  "smb"
  "tcp"
  "discord"
  "github"
  "slack"
  "dropbox"
  "twitter"
)

for PROFILE in "${C2_PROFILES[@]}"; do
    mythic-cli install c2-profile "$PROFILE" || error "Failed to install $PROFILE"
done

# === HTTPS self-signed cert ===
log "Creating self-signed HTTPS cert..."
mkdir -p ~/.mythic/certs
openssl req -x509 -newkey rsa:4096 -keyout ~/.mythic/certs/key.pem -out ~/.mythic/certs/cert.pem -days 365 -nodes -subj "/CN=localhost"

# === Start Mythic ===
log "Starting Mythic server..."
cd ~/mythic-cli
MYTHIC_SELF_SIGNED_CERT=true mythic-cli start

# === Download Offensive Tools ===
log "Downloading offensive tools..."
mkdir -p ~/offensive-tools
cd ~/offensive-tools

git clone https://github.com/PowerShellMafia/PowerSploit.git || true
git clone https://github.com/EmpireProject/Empire.git EmpireProject || true
git clone https://github.com/BC-SECURITY/Empire.git BCEmpire || true
git clone https://github.com/BloodHoundAD/BloodHound.git || true
git clone https://github.com/GhostPack/SharpHound.git || true
git clone https://github.com/GhostPack/Rubeus.git || true
git clone https://github.com/GhostPack/Seatbelt.git || true
git clone https://github.com/GhostPack/Certify.git || true

log "Downloading Mimikatz..."
wget -nc https://github.com/gentilkiwi/mimikatz/releases/latest/download/mimikatz_trunk.zip -O mimikatz.zip || true
unzip -o mimikatz.zip -d mimikatz || true

# === Done ===
IP=$(curl -s ifconfig.me || hostname -I | awk '{print $1}')
log "‚úÖ Mythic is running at: https://$IP:7443"
log "Use Lynx to view Mythic: lynx https://$IP:7443"
log "üì¶ Offensive tools in: ~/offensive-tools"
log "üîÅ Restart shell or 'source ~/.bashrc' to use mythic-cli"
